{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyChallengeDos\\\\challengeReact\\\\components\\\\Post.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Swal from 'sweetalert2';\nimport postContext from '../context/posts/postContext';\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var post = _ref.post;\n  // Next router\n  var router = useRouter(); // obtener la función del context de posts\n\n  var postsContext = useContext(postContext);\n  var eliminarPost = postsContext.eliminarPost,\n      postActual = postsContext.postActual;\n  var userId = post.userId,\n      id = post.id,\n      title = post.title,\n      body = post.body; // funcion que redirige de forma programada\n\n  var seleccionarPost = function seleccionarPost(post) {\n    postActual(post);\n    router.push('/editarpost');\n  }; // confirmar si desea eliminarlo\n\n\n  var confirmarEliminarPost = function confirmarEliminarPost(id) {\n    // preguntar al usuario\n    Swal.fire({\n      title: 'Estás seguro?',\n      text: \"Un post que se elimina no se puede recuperar\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#60A5FA',\n      cancelButtonColor: '#000000',\n      confirmButtonText: 'Sí, eliminar!',\n      cancelButtonText: 'Cancelar',\n      width: 400,\n      showClass: {\n        popup: 'animate__animated animate__fadeInDown'\n      },\n      hideClass: {\n        popup: 'animate__animated animate__fadeOutUp'\n      }\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        eliminarPost(id);\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex flex-wrap my-2 items-center border-b-2 border-blue-500 \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"flex-1 font-bold text-sm lg:text-base\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"img\", {\n    className: \"w-6 mr-5 cursor-pointer\",\n    src: \"/editar.png\",\n    onClick: function onClick() {\n      return seleccionarPost(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(\"img\", {\n    className: \"w-6 cursor-pointer\",\n    src: \"/eliminar.png\" //onClick={() => eliminar() }\n    ,\n    onClick: function onClick() {\n      return confirmarEliminarPost(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Post, \"JDcStw66KgrRRgHXIi80KcuCUj0=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyChallengeDos/challengeReact/components/Post.js"],"names":["React","useContext","useEffect","useRouter","Swal","postContext","Post","post","router","postsContext","eliminarPost","postActual","userId","id","title","body","seleccionarPost","push","confirmarEliminarPost","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","width","showClass","popup","hideClass","then","result","isConfirmed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAEvB;AACA,MAAMC,MAAM,GAAGL,SAAS,EAAxB,CAHuB,CAKvB;;AACA,MAAMM,YAAY,GAAGR,UAAU,CAACI,WAAD,CAA/B;AANuB,MAOfK,YAPe,GAOeD,YAPf,CAOfC,YAPe;AAAA,MAODC,UAPC,GAOeF,YAPf,CAODE,UAPC;AAAA,MASfC,MATe,GASaL,IATb,CASfK,MATe;AAAA,MASPC,EATO,GASaN,IATb,CASPM,EATO;AAAA,MASHC,KATG,GASaP,IATb,CASHO,KATG;AAAA,MASIC,IATJ,GASaR,IATb,CASIQ,IATJ,EAWvB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,IAAI,EAAI;AAC5BI,IAAAA,UAAU,CAACJ,IAAD,CAAV;AACAC,IAAAA,MAAM,CAACS,IAAP,CAAY,aAAZ;AACH,GAHD,CAZuB,CAiBvB;;;AACA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAL,EAAE,EAAI;AAChC;AACAT,IAAAA,IAAI,CAACe,IAAL,CAAU;AACNL,MAAAA,KAAK,EAAE,eADD;AAENM,MAAAA,IAAI,EAAE,8CAFA;AAGNC,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,gBAAgB,EAAE,IAJZ;AAKNC,MAAAA,kBAAkB,EAAE,SALd;AAMNC,MAAAA,iBAAiB,EAAE,SANb;AAONC,MAAAA,iBAAiB,EAAE,eAPb;AAQNC,MAAAA,gBAAgB,EAAE,UARZ;AASNC,MAAAA,KAAK,EAAE,GATD;AAUNC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE;AADA,OAVL;AAaNC,MAAAA,SAAS,EAAE;AACPD,QAAAA,KAAK,EAAE;AADA;AAbL,KAAV,EAiBGE,IAjBH,CAiBQ,UAACC,MAAD,EAAY;AAChB,UAAIA,MAAM,CAACC,WAAX,EAAwB;AACpBvB,QAAAA,YAAY,CAACG,EAAD,CAAZ;AACH;AACJ,KArBD;AAsBH,GAxBD;;AA0BA,SACI;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,uCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDC,KAAtD,CADJ,EAGI;AACI,IAAA,SAAS,EAAC,yBADd;AACwC,IAAA,GAAG,EAAC,aAD5C;AAEI,IAAA,OAAO,EAAG;AAAA,aAAME,eAAe,CAACH,EAAD,CAArB;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAQI;AACI,IAAA,SAAS,EAAC,oBADd;AACmC,IAAA,GAAG,EAAC,eADvC,CAEI;AAFJ;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMK,qBAAqB,CAACL,EAAD,CAA3B;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAiBH,CA7DD;;GAAMP,I;UAGaH,S;;;KAHbG,I;AA+DN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport postContext from '../context/posts/postContext';\r\n\r\nconst Post = ({ post }) => {\r\n\r\n    // Next router\r\n    const router = useRouter();\r\n\r\n    // obtener la función del context de posts\r\n    const postsContext = useContext(postContext);\r\n    const { eliminarPost, postActual, } = postsContext;\r\n\r\n    const { userId, id, title, body } = post;\r\n \r\n    // funcion que redirige de forma programada\r\n    const seleccionarPost = post => {\r\n        postActual(post);\r\n        router.push('/editarpost');\r\n    }\r\n\r\n    // confirmar si desea eliminarlo\r\n    const confirmarEliminarPost = id => {\r\n        // preguntar al usuario\r\n        Swal.fire({\r\n            title: 'Estás seguro?',\r\n            text: \"Un post que se elimina no se puede recuperar\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#60A5FA',\r\n            cancelButtonColor: '#000000',\r\n            confirmButtonText: 'Sí, eliminar!',\r\n            cancelButtonText: 'Cancelar',\r\n            width: 400,\r\n            showClass: {\r\n                popup: 'animate__animated animate__fadeInDown'\r\n              },\r\n            hideClass: {\r\n                popup: 'animate__animated animate__fadeOutUp'\r\n            }\r\n\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarPost(id);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-wrap my-2 items-center border-b-2 border-blue-500 \">\r\n            <p className=\"flex-1 font-bold text-sm lg:text-base\">{title}</p>\r\n            \r\n            <img \r\n                className=\"w-6 mr-5 cursor-pointer\" src=\"/editar.png\"\r\n                onClick={ () => seleccionarPost(id) }\r\n            />\r\n\r\n            <img \r\n                className=\"w-6 cursor-pointer\" src=\"/eliminar.png\"\r\n                //onClick={() => eliminar() }\r\n                onClick={() => confirmarEliminarPost(id)}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}