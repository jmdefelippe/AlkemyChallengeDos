{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyChallengeDos\\\\challengeReact\\\\pages\\\\crearpost.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Alerta from '../components/Alerta';\nimport Layout from '../components/Layout';\nimport postContext from '../context/posts/postContext';\n\nconst CrearPost = () => {\n  const router = useRouter();\n  const PostContext = useContext(postContext);\n  const {\n    message,\n    createPost\n  } = PostContext;\n  useEffect(() => {\n    if (message.category === 'alert-ok') {\n      router.push('/');\n    } // eslint-disable-next-line\n\n  }, [message]); // Formulario y validación con formik y Yup\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      body: ''\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required('Title required'),\n      body: Yup.string().required('Body required')\n    }),\n    onSubmit: valores => {\n      createPost(valores);\n    }\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-xl md:text-2xl lg:text-3xl font-sans font-bold text-blue-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Crear Post\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-20\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"title\",\n    placeholder: \"Title\",\n    value: formik.values.title,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }\n  }), formik.touched.title && formik.errors.title ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, formik.errors.title, \" \")) : null), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, \"Body\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"body\",\n    placeholder: \"Body\",\n    value: formik.values.body,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  }), formik.touched.body && formik.errors.body ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, formik.errors.body, \" \")) : null), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-blue-400 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold\",\n    value: \"Crear Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }), message.category === 'alert-error' && __jsx(Alerta, {\n    msg: message.msg,\n    category: message.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 65\n    }\n  }))))));\n};\n\nexport default CrearPost;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyChallengeDos/challengeReact/pages/crearpost.js"],"names":["React","useContext","useEffect","useRouter","useFormik","Yup","Alerta","Layout","postContext","CrearPost","router","PostContext","message","createPost","category","push","formik","initialValues","title","body","validationSchema","object","string","required","onSubmit","valores","handleSubmit","values","handleChange","touched","errors","msg"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useFormik } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport Alerta from '../components/Alerta';\r\nimport Layout from '../components/Layout';\r\n\r\nimport postContext from '../context/posts/postContext';\r\n\r\nconst CrearPost = () => {\r\n  \r\n  const router = useRouter();\r\n\r\n  const PostContext = useContext(postContext);\r\n  const { message, createPost } = PostContext;\r\n\r\n  useEffect(() => {\r\n   \r\n    if (message.category === 'alert-ok') {\r\n      router.push('/');\r\n    }\r\n      \r\n    // eslint-disable-next-line\r\n  }, [message]);\r\n\r\n  // Formulario y validación con formik y Yup\r\n  const formik = useFormik({\r\n      initialValues: {\r\n        title: '',\r\n        body: ''\r\n      },\r\n      validationSchema: Yup.object({\r\n            title: Yup.string()\r\n                .required('Title required'),\r\n            body: Yup.string()\r\n                .required('Body required')\r\n      }),\r\n      onSubmit: valores => {\r\n          createPost(valores);\r\n      }\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n        <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\r\n          <h2 className=\"text-xl md:text-2xl lg:text-3xl font-sans font-bold text-blue-500 text-center my-4\">Crear Post</h2>\r\n\r\n          <div className=\"flex justify-center mt-5\">\r\n              <div className=\"w-full max-w-lg\">\r\n                  <form\r\n                    className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-20\"\r\n                    onSubmit={formik.handleSubmit}\r\n                  >\r\n                      <div className=\"mb-4\">\r\n                          <label \r\n                            className=\"block text-black text-sm font-bold mb-2\"\r\n                            htmlFor=\"title\"\r\n                          >Title</label>\r\n                          <input\r\n                              type=\"text\"\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"title\"\r\n                              placeholder=\"Title\"\r\n                              value={formik.values.title}\r\n                              onChange={formik.handleChange}\r\n                          />\r\n\r\n                          { formik.touched.title && formik.errors.title ? (\r\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                <p className=\"font-bold\">Error</p>\r\n                                <p>{formik.errors.title} </p>\r\n                            </div>\r\n                          ) : null }\r\n                      </div>\r\n\r\n                      <div className=\"mb-4\">\r\n                          <label \r\n                            className=\"block text-black text-sm font-bold mb-2\"\r\n                            htmlFor=\"body\"\r\n                          >Body</label>\r\n                          <input\r\n                              type=\"text\"\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"body\"\r\n                              placeholder=\"Body\"\r\n                              value={formik.values.body}\r\n                              onChange={formik.handleChange}\r\n                          />\r\n\r\n                          { formik.touched.body && formik.errors.body ? (\r\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                <p className=\"font-bold\">Error</p>\r\n                                <p>{formik.errors.body} </p>\r\n                            </div>\r\n                          ) : null }\r\n                      </div>\r\n\r\n                      \r\n                      <input \r\n                        type=\"submit\"\r\n                        className=\"bg-blue-400 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold\"\r\n                        value=\"Crear Post\"\r\n                      />\r\n\r\n                      { (message.category === 'alert-error') && <Alerta msg={message.msg} category={message.category} /> }\r\n\r\n                  </form>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    </Layout>\r\n   );\r\n}\r\n \r\nexport default CrearPost;"]},"metadata":{},"sourceType":"module"}